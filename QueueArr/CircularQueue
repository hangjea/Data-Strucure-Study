#include <stdio.h>
#include <stdlib.h>
#include "CircularQueue.h"

void QueueInit(Queue * pq) //동일 위치화
{
	pq->front = 0;
	pq->rear = 0;
} 

int QIsEmpty(Queue * pq) //비어있는지 확인
{
	if(pq->front == pq->rear)//그림에서 F 랑 R이 같으면(더이상 자료가 없으면)
		return TRUE;  //1 출력
	else
		return FALSE; //0 출력
}

int NextPosIdx(int pos)
{
	if(pos == QUE_LEN-1) //배열의 마지막이라면
		return 0;
	else
		return pos+1; //마지막이 아니라면 +1 증가해서 반환
}

void Enqueue(Queue * pq, Data data)//데이터 저장하는 거
{
	if(NextPosIdx(pq->rear) == pq->front) //끝이라서 0을 반환하면 pq->front에 저장되어 있는 0이랑 같으니깐
	{									// 더이상 저장할 공간이 없으면 안되니 코드 실행해야함
		printf("Queue Memory Error!"); 
		exit(-1); //종료
	}

	pq->rear = NextPosIdx(pq->rear); // 끝이 아니면 +1에서 다음자리로 이동
	pq->queArr[pq->rear] = data; //기존 배열에서 +1된 공간에 저장
}

Data Dequeue(Queue * pq)
{
	if(QIsEmpty(pq)) //자리가 있는지 확인
	{
		printf("Queue Memory Error!");
		exit(-1);
	}

	pq->front = NextPosIdx(pq->front);//front를 한칸 이동
	return pq->queArr[pq->front]; //front가 가르키는 데이터 반환
}

Data QPeek(Queue * pq)
{
	if(QIsEmpty(pq))
	{
		printf("Queue Memory Error!");
		exit(-1);
	}

	return pq->queArr[NextPosIdx(pq->front)]; //현재 front가 가르키는 숫자 반환
}
